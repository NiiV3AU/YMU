# This workflow will install Python dependencies, build an executable,
# generate a checksum, and then create a new GitHub Release with the artifacts.

name: YMU Manual Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    name: Build YMU on Windows
    outputs:
      full_sha: ${{ steps.var.outputs.full_sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pyinstaller
          pip install -r requirements.txt

      - name: Verify With Flake8
        run: |
          # Stop the build if there are critical Python syntax errors
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Check for other issues but don't stop the build
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build Executable
        run: |
          pyinstaller "gui.py" --noconfirm --onefile --windowed --noconsole --name "YMU" --icon "./assets/icons/ymu.ico" --add-data "./assets;assets" --collect-submodules "theme_manager" --version-file "./version.txt"

      - name: Generate Checksum for Executable
        run: |
          # Use the native Windows command to generate the SHA256 checksum
          certutil -hashfile dist\YMU.exe SHA256 > dist\YMU.exe.sha256
          # Optional: Display the checksum in the logs
          cat dist\YMU.exe.sha256
      
      - name: Generate Build Info
        id: var
        run: |
          echo "full_sha=$(git rev-parse HEAD)" >> $env:GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ymu-build-artifacts
          path: |
            dist/YMU.exe
            dist/YMU.exe.sha256

  publish_release:
    runs-on: ubuntu-latest
    name: Create GitHub Release
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ymu-build-artifacts

      - name: Increment Version
        id: increment_version
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tags = await github.rest.repos.listTags({ owner, repo });
            let newVersion;
            if (tags.data.length === 0) {
              console.log('No existing tags found. Starting with version v1.1.5');
              newVersion = 'v1.1.5';
            } else {
              const latestTag = tags.data[0].name;
              const versionParts = latestTag.substring(1).split('.').map(Number);
              if (versionParts[1] === 9 && versionParts[2] === 9) {
                versionParts[0] += 1;
                versionParts[1] = 0;
                versionParts[2] = 0;
              } else if (versionParts[2] === 9) {
                versionParts[1] += 1;
                versionParts[2] = 0;
              } else {
                versionParts[2] += 1;
              }
              newVersion = `v${versionParts.join('.')}`;
            }
            core.setOutput("new_version", newVersion);

      - name: Read Checksum File
        id: read_sha
        run: |
          # Read the checksum content and remove extra lines/text from certutil's output
          sha_content=$(grep -v "SHA256" YMU.exe.sha256 | grep -v "CertUtil")
          echo "build_sha=${sha_content}" >> $GITHUB_OUTPUT
          echo "Checksum content: ${sha_content}"
          
      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          name: YMU ${{ steps.increment_version.outputs.new_version }}
          tag_name: ${{ steps.increment_version.outputs.new_version }}
          body: |
            ### Changelog:
            * ...

            ---
            ### SHA256 Checksum:
            `${{ steps.read_sha.outputs.build_sha }}`

            ---
            >[!NOTE]
            >**This release was built by Github Actions**
            >| [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) |
            >| --- |
          files: |
            YMU.exe
            YMU.exe.sha256
